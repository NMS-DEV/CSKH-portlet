/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.docs.customercare.model.impl;

import com.liferay.docs.customercare.model.CallDataEntry;
import com.liferay.docs.customercare.model.CallDataEntryModel;
import com.liferay.docs.customercare.model.CallDataEntrySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CallDataEntry service. Represents a row in the &quot;CC_CallDataEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.docs.customercare.model.CallDataEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CallDataEntryImpl}.
 * </p>
 *
 * @author DuyMB
 * @see CallDataEntryImpl
 * @see com.liferay.docs.customercare.model.CallDataEntry
 * @see com.liferay.docs.customercare.model.CallDataEntryModel
 * @generated
 */
@JSON(strict = true)
public class CallDataEntryModelImpl extends BaseModelImpl<CallDataEntry>
	implements CallDataEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a call data entry model instance should use the {@link com.liferay.docs.customercare.model.CallDataEntry} interface instead.
	 */
	public static final String TABLE_NAME = "CC_CallDataEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "callDataEntryId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "callId", Types.VARCHAR },
			{ "startCallDate", Types.TIMESTAMP },
			{ "endCallDate", Types.TIMESTAMP },
			{ "queueName", Types.VARCHAR },
			{ "callNumber", Types.VARCHAR },
			{ "channel", Types.VARCHAR },
			{ "waitTime", Types.VARCHAR },
			{ "durationTime", Types.VARCHAR },
			{ "extension", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "channelOld", Types.VARCHAR },
			{ "channelTo", Types.VARCHAR },
			{ "extOfMonitor", Types.VARCHAR },
			{ "causeCode", Types.VARCHAR },
			{ "sipCause", Types.VARCHAR },
			{ "staffName", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CC_CallDataEntry (callDataEntryId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,callId VARCHAR(75) null,startCallDate DATE null,endCallDate DATE null,queueName VARCHAR(75) null,callNumber VARCHAR(75) null,channel VARCHAR(75) null,waitTime VARCHAR(75) null,durationTime VARCHAR(75) null,extension VARCHAR(75) null,status VARCHAR(75) null,channelOld VARCHAR(75) null,channelTo VARCHAR(75) null,extOfMonitor VARCHAR(75) null,causeCode VARCHAR(75) null,sipCause VARCHAR(75) null,staffName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CC_CallDataEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY callDataEntry.callDataEntryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CC_CallDataEntry.callDataEntryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.docs.customercare.model.CallDataEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.docs.customercare.model.CallDataEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CallDataEntry toModel(CallDataEntrySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CallDataEntry model = new CallDataEntryImpl();

		model.setCallDataEntryId(soapModel.getCallDataEntryId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCallId(soapModel.getCallId());
		model.setStartCallDate(soapModel.getStartCallDate());
		model.setEndCallDate(soapModel.getEndCallDate());
		model.setQueueName(soapModel.getQueueName());
		model.setCallNumber(soapModel.getCallNumber());
		model.setChannel(soapModel.getChannel());
		model.setWaitTime(soapModel.getWaitTime());
		model.setDurationTime(soapModel.getDurationTime());
		model.setExtension(soapModel.getExtension());
		model.setStatus(soapModel.getStatus());
		model.setChannelOld(soapModel.getChannelOld());
		model.setChannelTo(soapModel.getChannelTo());
		model.setExtOfMonitor(soapModel.getExtOfMonitor());
		model.setCauseCode(soapModel.getCauseCode());
		model.setSipCause(soapModel.getSipCause());
		model.setStaffName(soapModel.getStaffName());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CallDataEntry> toModels(CallDataEntrySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CallDataEntry> models = new ArrayList<CallDataEntry>(soapModels.length);

		for (CallDataEntrySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.docs.customercare.model.CallDataEntry"));

	public CallDataEntryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _callDataEntryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCallDataEntryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _callDataEntryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CallDataEntry.class;
	}

	@Override
	public String getModelClassName() {
		return CallDataEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("callDataEntryId", getCallDataEntryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("callId", getCallId());
		attributes.put("startCallDate", getStartCallDate());
		attributes.put("endCallDate", getEndCallDate());
		attributes.put("queueName", getQueueName());
		attributes.put("callNumber", getCallNumber());
		attributes.put("channel", getChannel());
		attributes.put("waitTime", getWaitTime());
		attributes.put("durationTime", getDurationTime());
		attributes.put("extension", getExtension());
		attributes.put("status", getStatus());
		attributes.put("channelOld", getChannelOld());
		attributes.put("channelTo", getChannelTo());
		attributes.put("extOfMonitor", getExtOfMonitor());
		attributes.put("causeCode", getCauseCode());
		attributes.put("sipCause", getSipCause());
		attributes.put("staffName", getStaffName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long callDataEntryId = (Long)attributes.get("callDataEntryId");

		if (callDataEntryId != null) {
			setCallDataEntryId(callDataEntryId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String callId = (String)attributes.get("callId");

		if (callId != null) {
			setCallId(callId);
		}

		Date startCallDate = (Date)attributes.get("startCallDate");

		if (startCallDate != null) {
			setStartCallDate(startCallDate);
		}

		Date endCallDate = (Date)attributes.get("endCallDate");

		if (endCallDate != null) {
			setEndCallDate(endCallDate);
		}

		String queueName = (String)attributes.get("queueName");

		if (queueName != null) {
			setQueueName(queueName);
		}

		String callNumber = (String)attributes.get("callNumber");

		if (callNumber != null) {
			setCallNumber(callNumber);
		}

		String channel = (String)attributes.get("channel");

		if (channel != null) {
			setChannel(channel);
		}

		String waitTime = (String)attributes.get("waitTime");

		if (waitTime != null) {
			setWaitTime(waitTime);
		}

		String durationTime = (String)attributes.get("durationTime");

		if (durationTime != null) {
			setDurationTime(durationTime);
		}

		String extension = (String)attributes.get("extension");

		if (extension != null) {
			setExtension(extension);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String channelOld = (String)attributes.get("channelOld");

		if (channelOld != null) {
			setChannelOld(channelOld);
		}

		String channelTo = (String)attributes.get("channelTo");

		if (channelTo != null) {
			setChannelTo(channelTo);
		}

		String extOfMonitor = (String)attributes.get("extOfMonitor");

		if (extOfMonitor != null) {
			setExtOfMonitor(extOfMonitor);
		}

		String causeCode = (String)attributes.get("causeCode");

		if (causeCode != null) {
			setCauseCode(causeCode);
		}

		String sipCause = (String)attributes.get("sipCause");

		if (sipCause != null) {
			setSipCause(sipCause);
		}

		String staffName = (String)attributes.get("staffName");

		if (staffName != null) {
			setStaffName(staffName);
		}
	}

	@JSON
	@Override
	public long getCallDataEntryId() {
		return _callDataEntryId;
	}

	@Override
	public void setCallDataEntryId(long callDataEntryId) {
		_callDataEntryId = callDataEntryId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getCallId() {
		if (_callId == null) {
			return StringPool.BLANK;
		}
		else {
			return _callId;
		}
	}

	@Override
	public void setCallId(String callId) {
		_callId = callId;
	}

	@JSON
	@Override
	public Date getStartCallDate() {
		return _startCallDate;
	}

	@Override
	public void setStartCallDate(Date startCallDate) {
		_startCallDate = startCallDate;
	}

	@JSON
	@Override
	public Date getEndCallDate() {
		return _endCallDate;
	}

	@Override
	public void setEndCallDate(Date endCallDate) {
		_endCallDate = endCallDate;
	}

	@JSON
	@Override
	public String getQueueName() {
		if (_queueName == null) {
			return StringPool.BLANK;
		}
		else {
			return _queueName;
		}
	}

	@Override
	public void setQueueName(String queueName) {
		_queueName = queueName;
	}

	@JSON
	@Override
	public String getCallNumber() {
		if (_callNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _callNumber;
		}
	}

	@Override
	public void setCallNumber(String callNumber) {
		_callNumber = callNumber;
	}

	@JSON
	@Override
	public String getChannel() {
		if (_channel == null) {
			return StringPool.BLANK;
		}
		else {
			return _channel;
		}
	}

	@Override
	public void setChannel(String channel) {
		_channel = channel;
	}

	@JSON
	@Override
	public String getWaitTime() {
		if (_waitTime == null) {
			return StringPool.BLANK;
		}
		else {
			return _waitTime;
		}
	}

	@Override
	public void setWaitTime(String waitTime) {
		_waitTime = waitTime;
	}

	@JSON
	@Override
	public String getDurationTime() {
		if (_durationTime == null) {
			return StringPool.BLANK;
		}
		else {
			return _durationTime;
		}
	}

	@Override
	public void setDurationTime(String durationTime) {
		_durationTime = durationTime;
	}

	@JSON
	@Override
	public String getExtension() {
		if (_extension == null) {
			return StringPool.BLANK;
		}
		else {
			return _extension;
		}
	}

	@Override
	public void setExtension(String extension) {
		_extension = extension;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	@Override
	public String getChannelOld() {
		if (_channelOld == null) {
			return StringPool.BLANK;
		}
		else {
			return _channelOld;
		}
	}

	@Override
	public void setChannelOld(String channelOld) {
		_channelOld = channelOld;
	}

	@JSON
	@Override
	public String getChannelTo() {
		if (_channelTo == null) {
			return StringPool.BLANK;
		}
		else {
			return _channelTo;
		}
	}

	@Override
	public void setChannelTo(String channelTo) {
		_channelTo = channelTo;
	}

	@JSON
	@Override
	public String getExtOfMonitor() {
		if (_extOfMonitor == null) {
			return StringPool.BLANK;
		}
		else {
			return _extOfMonitor;
		}
	}

	@Override
	public void setExtOfMonitor(String extOfMonitor) {
		_extOfMonitor = extOfMonitor;
	}

	@JSON
	@Override
	public String getCauseCode() {
		if (_causeCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _causeCode;
		}
	}

	@Override
	public void setCauseCode(String causeCode) {
		_causeCode = causeCode;
	}

	@JSON
	@Override
	public String getSipCause() {
		if (_sipCause == null) {
			return StringPool.BLANK;
		}
		else {
			return _sipCause;
		}
	}

	@Override
	public void setSipCause(String sipCause) {
		_sipCause = sipCause;
	}

	@JSON
	@Override
	public String getStaffName() {
		if (_staffName == null) {
			return StringPool.BLANK;
		}
		else {
			return _staffName;
		}
	}

	@Override
	public void setStaffName(String staffName) {
		_staffName = staffName;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CallDataEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CallDataEntry toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CallDataEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CallDataEntryImpl callDataEntryImpl = new CallDataEntryImpl();

		callDataEntryImpl.setCallDataEntryId(getCallDataEntryId());
		callDataEntryImpl.setGroupId(getGroupId());
		callDataEntryImpl.setCompanyId(getCompanyId());
		callDataEntryImpl.setUserId(getUserId());
		callDataEntryImpl.setUserName(getUserName());
		callDataEntryImpl.setCreateDate(getCreateDate());
		callDataEntryImpl.setModifiedDate(getModifiedDate());
		callDataEntryImpl.setCallId(getCallId());
		callDataEntryImpl.setStartCallDate(getStartCallDate());
		callDataEntryImpl.setEndCallDate(getEndCallDate());
		callDataEntryImpl.setQueueName(getQueueName());
		callDataEntryImpl.setCallNumber(getCallNumber());
		callDataEntryImpl.setChannel(getChannel());
		callDataEntryImpl.setWaitTime(getWaitTime());
		callDataEntryImpl.setDurationTime(getDurationTime());
		callDataEntryImpl.setExtension(getExtension());
		callDataEntryImpl.setStatus(getStatus());
		callDataEntryImpl.setChannelOld(getChannelOld());
		callDataEntryImpl.setChannelTo(getChannelTo());
		callDataEntryImpl.setExtOfMonitor(getExtOfMonitor());
		callDataEntryImpl.setCauseCode(getCauseCode());
		callDataEntryImpl.setSipCause(getSipCause());
		callDataEntryImpl.setStaffName(getStaffName());

		callDataEntryImpl.resetOriginalValues();

		return callDataEntryImpl;
	}

	@Override
	public int compareTo(CallDataEntry callDataEntry) {
		long primaryKey = callDataEntry.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CallDataEntry)) {
			return false;
		}

		CallDataEntry callDataEntry = (CallDataEntry)obj;

		long primaryKey = callDataEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CallDataEntry> toCacheModel() {
		CallDataEntryCacheModel callDataEntryCacheModel = new CallDataEntryCacheModel();

		callDataEntryCacheModel.callDataEntryId = getCallDataEntryId();

		callDataEntryCacheModel.groupId = getGroupId();

		callDataEntryCacheModel.companyId = getCompanyId();

		callDataEntryCacheModel.userId = getUserId();

		callDataEntryCacheModel.userName = getUserName();

		String userName = callDataEntryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			callDataEntryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			callDataEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			callDataEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			callDataEntryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			callDataEntryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		callDataEntryCacheModel.callId = getCallId();

		String callId = callDataEntryCacheModel.callId;

		if ((callId != null) && (callId.length() == 0)) {
			callDataEntryCacheModel.callId = null;
		}

		Date startCallDate = getStartCallDate();

		if (startCallDate != null) {
			callDataEntryCacheModel.startCallDate = startCallDate.getTime();
		}
		else {
			callDataEntryCacheModel.startCallDate = Long.MIN_VALUE;
		}

		Date endCallDate = getEndCallDate();

		if (endCallDate != null) {
			callDataEntryCacheModel.endCallDate = endCallDate.getTime();
		}
		else {
			callDataEntryCacheModel.endCallDate = Long.MIN_VALUE;
		}

		callDataEntryCacheModel.queueName = getQueueName();

		String queueName = callDataEntryCacheModel.queueName;

		if ((queueName != null) && (queueName.length() == 0)) {
			callDataEntryCacheModel.queueName = null;
		}

		callDataEntryCacheModel.callNumber = getCallNumber();

		String callNumber = callDataEntryCacheModel.callNumber;

		if ((callNumber != null) && (callNumber.length() == 0)) {
			callDataEntryCacheModel.callNumber = null;
		}

		callDataEntryCacheModel.channel = getChannel();

		String channel = callDataEntryCacheModel.channel;

		if ((channel != null) && (channel.length() == 0)) {
			callDataEntryCacheModel.channel = null;
		}

		callDataEntryCacheModel.waitTime = getWaitTime();

		String waitTime = callDataEntryCacheModel.waitTime;

		if ((waitTime != null) && (waitTime.length() == 0)) {
			callDataEntryCacheModel.waitTime = null;
		}

		callDataEntryCacheModel.durationTime = getDurationTime();

		String durationTime = callDataEntryCacheModel.durationTime;

		if ((durationTime != null) && (durationTime.length() == 0)) {
			callDataEntryCacheModel.durationTime = null;
		}

		callDataEntryCacheModel.extension = getExtension();

		String extension = callDataEntryCacheModel.extension;

		if ((extension != null) && (extension.length() == 0)) {
			callDataEntryCacheModel.extension = null;
		}

		callDataEntryCacheModel.status = getStatus();

		String status = callDataEntryCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			callDataEntryCacheModel.status = null;
		}

		callDataEntryCacheModel.channelOld = getChannelOld();

		String channelOld = callDataEntryCacheModel.channelOld;

		if ((channelOld != null) && (channelOld.length() == 0)) {
			callDataEntryCacheModel.channelOld = null;
		}

		callDataEntryCacheModel.channelTo = getChannelTo();

		String channelTo = callDataEntryCacheModel.channelTo;

		if ((channelTo != null) && (channelTo.length() == 0)) {
			callDataEntryCacheModel.channelTo = null;
		}

		callDataEntryCacheModel.extOfMonitor = getExtOfMonitor();

		String extOfMonitor = callDataEntryCacheModel.extOfMonitor;

		if ((extOfMonitor != null) && (extOfMonitor.length() == 0)) {
			callDataEntryCacheModel.extOfMonitor = null;
		}

		callDataEntryCacheModel.causeCode = getCauseCode();

		String causeCode = callDataEntryCacheModel.causeCode;

		if ((causeCode != null) && (causeCode.length() == 0)) {
			callDataEntryCacheModel.causeCode = null;
		}

		callDataEntryCacheModel.sipCause = getSipCause();

		String sipCause = callDataEntryCacheModel.sipCause;

		if ((sipCause != null) && (sipCause.length() == 0)) {
			callDataEntryCacheModel.sipCause = null;
		}

		callDataEntryCacheModel.staffName = getStaffName();

		String staffName = callDataEntryCacheModel.staffName;

		if ((staffName != null) && (staffName.length() == 0)) {
			callDataEntryCacheModel.staffName = null;
		}

		return callDataEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{callDataEntryId=");
		sb.append(getCallDataEntryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", callId=");
		sb.append(getCallId());
		sb.append(", startCallDate=");
		sb.append(getStartCallDate());
		sb.append(", endCallDate=");
		sb.append(getEndCallDate());
		sb.append(", queueName=");
		sb.append(getQueueName());
		sb.append(", callNumber=");
		sb.append(getCallNumber());
		sb.append(", channel=");
		sb.append(getChannel());
		sb.append(", waitTime=");
		sb.append(getWaitTime());
		sb.append(", durationTime=");
		sb.append(getDurationTime());
		sb.append(", extension=");
		sb.append(getExtension());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", channelOld=");
		sb.append(getChannelOld());
		sb.append(", channelTo=");
		sb.append(getChannelTo());
		sb.append(", extOfMonitor=");
		sb.append(getExtOfMonitor());
		sb.append(", causeCode=");
		sb.append(getCauseCode());
		sb.append(", sipCause=");
		sb.append(getSipCause());
		sb.append(", staffName=");
		sb.append(getStaffName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("com.liferay.docs.customercare.model.CallDataEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>callDataEntryId</column-name><column-value><![CDATA[");
		sb.append(getCallDataEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>callId</column-name><column-value><![CDATA[");
		sb.append(getCallId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startCallDate</column-name><column-value><![CDATA[");
		sb.append(getStartCallDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endCallDate</column-name><column-value><![CDATA[");
		sb.append(getEndCallDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>queueName</column-name><column-value><![CDATA[");
		sb.append(getQueueName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>callNumber</column-name><column-value><![CDATA[");
		sb.append(getCallNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>channel</column-name><column-value><![CDATA[");
		sb.append(getChannel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>waitTime</column-name><column-value><![CDATA[");
		sb.append(getWaitTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>durationTime</column-name><column-value><![CDATA[");
		sb.append(getDurationTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extension</column-name><column-value><![CDATA[");
		sb.append(getExtension());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>channelOld</column-name><column-value><![CDATA[");
		sb.append(getChannelOld());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>channelTo</column-name><column-value><![CDATA[");
		sb.append(getChannelTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extOfMonitor</column-name><column-value><![CDATA[");
		sb.append(getExtOfMonitor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>causeCode</column-name><column-value><![CDATA[");
		sb.append(getCauseCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sipCause</column-name><column-value><![CDATA[");
		sb.append(getSipCause());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staffName</column-name><column-value><![CDATA[");
		sb.append(getStaffName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CallDataEntry.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CallDataEntry.class
		};
	private long _callDataEntryId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _callId;
	private Date _startCallDate;
	private Date _endCallDate;
	private String _queueName;
	private String _callNumber;
	private String _channel;
	private String _waitTime;
	private String _durationTime;
	private String _extension;
	private String _status;
	private String _channelOld;
	private String _channelTo;
	private String _extOfMonitor;
	private String _causeCode;
	private String _sipCause;
	private String _staffName;
	private CallDataEntry _escapedModel;
}